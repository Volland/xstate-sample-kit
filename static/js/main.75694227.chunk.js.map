{"version":3,"sources":["modules/fp/index.ts","modules/components/Content/Content.tsx","modules/users/types.ts","modules/users/index.ts","modules/utils/prefixer.ts","modules/utils/index.ts","modules/components/WelcomeMessage/WelcomeMessage.tsx","modules/xstate/mergeOptions.ts","modules/xstate/useServiceLogger.ts","modules/machines/input-control/types.ts","modules/machines/input-control/configuration.ts","modules/machines/username.ts","modules/machines/password.ts","modules/machines/operator/types.ts","modules/xstate/composable.ts","modules/machines/operator/configuration.ts","modules/xstate/index.ts","modules/machines/login-operator.ts","modules/machines/login.ts","apps/login/components/ResetButton.tsx","modules/apis/q/index.ts","modules/components/FailureMessage/FailureMessage.tsx","apps/login/components/FailureMessage.tsx","modules/components/LoginForm/LoginForm.tsx","apps/login/components/LoginButton.tsx","modules/components/labels/usernameLabel/index.tsx","modules/components/input-controls/Username/Username.tsx","modules/components/input-controls/FromMachine.tsx","apps/login/components/UsernameInput.tsx","modules/components/labels/passwordLabel/index.tsx","modules/components/input-controls/Password/Password.tsx","apps/login/components/PasswordInput.tsx","apps/login/components/LoginForm.tsx","modules/apis/login-api/index.ts","apps/login/components/LoginApp.tsx","modules/router/hooks.ts","modules/router/machine.ts","modules/SendContext.ts","modules/router/components/Link.tsx","modules/router/components/Redirect.tsx","modules/router/index.tsx","App.tsx","serviceWorker.ts","i18n.ts","index.tsx","modules/components/Content/Content.module.scss"],"names":["base","styles","flex","display","flexDirection","justifyContent","alignItems","Content","props","className","classes","content","style","children","progress","loading","undefined","getter","key","o","foldString","maybe","pipe","foldOption","constant","identity","User","t","id","name","username","email","getUsername","prefix","value","format","str","args","replace","match","number","WelcomeMessage","text","user","mergeOptions","a","b","Object","keys","reduce","acc","service","useEffect","i","subscription","subscribe","nextState","console","groupCollapsed","log","JSON","stringify","context","groupEnd","unsubscribe","StateType","EventType","configure","params","isValid","initialValue","prefixer","api","eventCreators","change","type","reset","focus","blur","selector","ctx","none","isChangeEvent","event","config","options","states","entry","on","actions","initial","target","cond","configuration","assignChange","assign","e","fromNullable","assignInitialValue","send","isRobot","guards","_","maybeUsername","trim","maybePassword","k1","k2","eventType","submit","promiser","O","isSubmitEvent","invoke","src","onDone","onError","assignInitial","c","assignDone","test","E","data","isDoneInvokeEvent","services","_ctx","Promise","reject","next","usernameConfig","passwordConfig","operationConfig","machine","createStateMachine","ResetButton","data-test","theme","onClick","status","password","ApiFailure","code","error","isFailureReason","reason","failure","createFailure","createApiFailure","createDecodeFailure","isApiFailure","isDecodeFailure","q","decoder","response","json","Error","decode","decodeError","f","FailureMessage","failureMessage","LoginForm","useTranslation","use","titleOfShow","usernameInput","passwordInput","loginButton","resetButton","LoginButton","raised","disabled","Login","usernameLabel","block","UsernameInput","placeholder","required","invalid","onChange","onFocus","onBlur","helpText","validationMsg","icon","focused","bind","getEventTargetValue","FromMachine","inputProps","flow","current","Username","matches","passwordLabel","PasswordInput","Password","canNotSubmit","onLogin","fetchUser","fetch","LoginApp","useMachine","loginMachine","useServiceLogger","isInProgress","isNotInProgress","usernameIsInvalid","passwordIsInvalid","isSubmitting","loggedIn","either","resetText","form","useLocation","path","React","history","push","setUserId","userId","clearUserId","__","createMachine","GOTO","home","users","exit","notFound","route","SendContext","createContext","Provider","Consumer","Link","to","href","linkWithSend","Redirect","redirect","redirectWithSend","Users","setUsers","didCancel","then","list","map","UserDetail","setUser","Home","NotFound","Route","state","routes","routerState","ready","setReady","rawUrl","url","RegExp","outcome","exec","groups","acc2","input","gotoEventFromUrl","location","pathname","background","padding","margin","Infinity","NL","i18n","changeLanguage","setTimeout","App","fallback","Boolean","window","hostname","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","backend","loadPath","process","interpolation","escapeValue","ReactDOM","render","document","getElementById","navigator","serviceWorker","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.75694227.chunk.js","sourcesContent":["import { Option, fold as foldOption } from \"fp-ts/es6/Option\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport { identity, constant } from \"fp-ts/es6/function\";\nimport * as Eq from 'fp-ts/es6/Eq'\n\nconst foo: Eq.Eq<{ name: string }> = {\n  equals: (a, b) => a.name === b.name\n}\n\nexport type Getter<K extends string> = <\n  T,\n  O extends {\n    [P in K]: T;\n  }\n>(\n  o: O\n) => O[K];\n\nexport const getter = <K extends string>(key: K): Getter<K> => <\n  T,\n  O extends { [P in K]: T }\n>(\n  o: O\n) => o[key];\n\nexport const getter2 = <K1 extends string, K2 extends string>(\n  k1: K1,\n  k2: K2\n) => <T, O extends { [P in K1]: { [R in K2]: T } }>(o: O) => o[k1][k2];\n\nexport const foldMaybe = <T>(maybe: Option<T>) => (base: T) => pipe(\n  maybe,\n  foldOption(constant(base), identity)\n)\n\nexport const foldValue = <T>(base: T) => (maybe: Option<T>) => pipe(\n  maybe,\n  foldOption(constant(base), identity)\n)\n\nexport const foldString = foldValue(\"\")","import classes from './Content.module.scss'\n\nimport * as React from \"react\";\n\nimport LinearProgress from \"../LinearProgress\";\n\nconst styles: React.CSSProperties = {\n  flex: \"1 1 auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n};\n\nconst Content = (props: { children: React.ReactNode; loading?: boolean }) => (\n  <>\n    <div className={classes.content} style={styles}>{props.children}</div>\n    <LinearProgress progress={props.loading ? undefined : 0} />\n  </>\n);\n\nexport default Content","import * as t from 'io-ts'\n\nexport const User = t.type({\n  id: t.number,\n  name: t.string,\n  username: t.string,\n  email: t.string,\n}, 'User')\n\nexport type User = t.TypeOf<typeof User>\n","import { getter } from '../fp'\n\nexport * from './types'\n\nexport const getId = getter('id')\nexport const getUsername = getter('username')\n","export default (prefix = '', separator = '.') => <T extends string>(value: T): T => prefix ? `${prefix}.${value}` as T : value","export { default as prefixer } from './prefixer'\n\nexport const format = (str: string, ...args: any[]) => {\n  return str.replace(/%(\\d+)/g, (match, number) => { \n    return typeof args[number] != 'undefined'\n      ? args[number]\n      : match\n    ;\n  });\n};","import * as React from \"react\";\n\nimport { User, getUsername } from \"../../users\";\n\nimport { format } from \"../../utils\";\n\nimport text from \"./text.json\";\n\nexport interface PropsWelcomeMessage {\n  user: User;\n}\n\nconst WelcomeMessage = (props: PropsWelcomeMessage) => (\n    <div id=\"welcome\">\n      {format(text[\"Welcome %username\"], getUsername(props.user))}\n    </div>\n);\n\nexport default WelcomeMessage","import { MachineOptions, EventObject } from \"xstate\";\n\nconst mergeOptions = <\n  TContextA,\n  TEventA extends EventObject,\n  TContextB,\n  TEventB extends EventObject\n>(\n  a: Partial<MachineOptions<TContextA, TEventA>>,\n  b: Partial<MachineOptions<TContextB, TEventB>>\n): Partial<MachineOptions<TContextA & TContextB, TEventA | TEventB>> =>\n  Object.keys({ ...a, ...b }).reduce(\n    (acc, key) => ({\n      ...acc,\n      [key]: {\n        ...((a as any)[key] || {}),\n        ...((b as any)[key] || {})\n      }\n    }),\n    {} as any\n  );\n\nexport default mergeOptions;\n","import { useEffect } from \"react\";\nimport { Interpreter, StateSchema, EventObject, Typestate } from \"xstate\";\n\n/**\n *\n */\nexport default <\n  TContext,\n  TStateSchema extends StateSchema = any,\n  TEvent extends EventObject = EventObject,\n  TTypestate extends Typestate<TContext> = any\n>(\n  service: Interpreter<TContext, TStateSchema, TEvent, TTypestate>,\n  name?: string\n) =>\n  useEffect(() => {\n    let i = 0;\n\n    const subscription = service.subscribe(nextState => {\n      if (name) {\n        console.groupCollapsed(`${name} (${++i})`);\n      }\n\n      console.log(JSON.stringify(nextState.value, null, 2))\n      console.log(JSON.stringify(nextState.context, null, 2))\n      console.log(nextState);\n\n      if (name) {\n        console.groupEnd();\n      }\n\n      return () => {\n        subscription.unsubscribe();\n      };\n    });\n  }, [service, name]);\n","import { Option } from \"fp-ts/lib/Option\";\n\nimport {\n  MachineOptions as XStateMachineOptions,\n  MachineConfig as XStateMachineConfig,\n  StateSchema as XStateStateSchema\n} from \"xstate\";\n\nimport { ComposableMachineConfig } from \"../../xstate\";\n\nexport const StateTypeEdit = \"edit\" as const;\nexport const StateTypePristine = \"pristine\" as const;\nexport const StateTypeDirty = \"dirty\" as const;\nexport const StateTypeTouched = \"touched\" as const;\nexport const StateTypeTouching = \"touching\" as const;\nexport const StateTypeUntouched = \"untouched\" as const;\nexport const StateTypeFocused = \"focused\" as const;\nexport const StateTypeBlurred = \"blurred\" as const;\nexport const StateTypeValid = \"valid\" as const;\nexport const StateTypeInvalid = \"invalid\" as const;\n\nexport const StateType = {\n  Edit: StateTypeEdit,\n  Pristine: StateTypePristine,\n  Dirty: StateTypeDirty,\n  Touched: StateTypeTouched,\n  Touching: StateTypeTouching,\n  Untouched: StateTypeUntouched,\n  Focused: StateTypeFocused,\n  Blurred: StateTypeBlurred,\n  Valid: StateTypeValid,\n  Invalid: StateTypeInvalid\n};\n\nexport const EventTypeChange: \"CHANGE\" = \"CHANGE\";\nexport const EventTypeFocus: \"FOCUS\" = \"FOCUS\";\nexport const EventTypeBlur: \"BLUR\" = \"BLUR\";\nexport const EventTypeReset: \"RESET\" = \"RESET\";\n\n/**\n * Dictionary of input control state event types.\n */\nexport const EventType = {\n  Change: EventTypeChange,\n  Focus: EventTypeFocus,\n  Blur: EventTypeBlur,\n  Reset: EventTypeReset\n};\n\n/**\n * Events dispatched for the input control state machine.\n */\nexport type Event<T> =\n  | {\n      type: typeof EventType.Change;\n      value?: T | null | undefined;\n      isRobot?: boolean;\n    }\n  | { type: typeof EventType.Focus }\n  | { type: typeof EventType.Blur }\n  | { type: typeof EventType.Reset };\n\n/**\n * Possible states for the input control machine.\n *\n * @typeparam T See [[Context.value]]\n */\nexport interface State<T, I extends string> {\n  /** The input contorl state's context type */\n  context: Context<T, I>;\n  /** The input contorl state's value */\n  value: {\n    [StateType.Pristine]: typeof StateType.Dirty | typeof StateType.Pristine;\n    [StateType.Touched]:\n      | typeof StateType.Touched\n      | typeof StateType.Touching\n      | typeof StateType.Untouched;\n    [StateType.Focused]: typeof StateType.Focused | typeof StateType.Blurred;\n    [StateType.Valid]: typeof StateType.Valid | typeof StateType.Invalid;\n  };\n}\n\n/**\n * Context state for input-control machines.\n *\n * @typeparam T Type of the data the input control outputs. Defaults to `string`\n */\nexport type Context<T, I extends string> = {\n  [P in I]: Option<T>;\n};\n\nexport interface StateSchema<T, I extends string> extends XStateStateSchema<Context<T, I>> {\n  context: {};\n  states: {\n    [StateType.Edit]: {};\n    [StateType.Pristine]: {\n      states: {\n        [StateType.Pristine]: {};\n        [StateType.Dirty]: {};\n      };\n    };\n    [StateType.Touched]: {\n      states: {\n        [StateType.Untouched]: {};\n        [StateType.Touching]: {};\n        [StateType.Touched]: {};\n      };\n    };\n    [StateType.Valid]: {\n      states: {\n        [StateType.Invalid]: {};\n        [StateType.Valid]: {};\n      };\n    };\n    [StateType.Focused]: {\n      states: {\n        [StateType.Focused]: {};\n        [StateType.Blurred]: {};\n      };\n    };\n  };\n}\n\nexport interface EventCreators<E> {\n  reset: () => E\n}\nexport interface Operable<I extends string, T, E> {\n  eventCreators: EventCreators<E>,\n  selector: (context: Context<T, I>) => Context<T, I>[I];\n}\n\nexport interface Api<T, I extends string> {\n  eventCreators: {\n    change: (value: T) => Event<T>;\n    reset: () => Event<T>;\n    focus: () => Event<T>;\n    blur: () => Event<T>;\n  };\n  selector: (context: Context<T, I>) => Context<T, I>[I];\n}\n\nexport type MachineOptions<T, I extends string> = Partial<\n  XStateMachineOptions<Context<T, I>, Event<T>>\n>;\n\nexport type MachineConfig<\n  T,\n  I extends string,\n> = XStateMachineConfig<Context<T, I>, StateSchema<T, I>, Event<T>>;\n\nexport type Config<T, I extends string> = ComposableMachineConfig<\n  Api<T, I>,\n  Context<T, I>,\n  StateSchema<T, I>,\n  Event<T>,\n  I\n>;\n","import {\n  StateType,\n  EventType,\n  Event,\n  Context,\n  State,\n  Api,\n  MachineOptions,\n  MachineConfig,\n  Config\n} from \"./types\";\n\nimport { assign, createMachine as createStateMachine, send } from \"xstate\";\n\nimport { fromNullable, Option, none } from \"fp-ts/lib/Option\";\n\nimport { prefixer } from \"../../utils\";\n\n/**\n * Raw configuration for input control state machines\n */\nexport const configuration = <I extends string>(options: { id: I }) => {\n  const { id } = options;\n\n  const prefix = prefixer(id);\n\n  return {\n    type: \"parallel\" as \"parallel\",\n    states: {\n      [StateType.Edit]: {\n        entry: prefix(\"assignInitialValue\"),\n        on: {\n          [prefix(EventType.Change)]: {\n            actions: prefix(\"assignChange\")\n          },\n          [prefix(EventType.Reset)]: {\n            actions: prefix(\"assignInitialValue\")\n          }\n        }\n      },\n      [StateType.Pristine]: {\n        initial: StateType.Pristine,\n        states: {\n          [StateType.Pristine]: {\n            on: {\n              [prefix(EventType.Change)]: {\n                target: StateType.Dirty,\n                cond: prefix(\"isHuman\"),\n              }\n            }\n          },\n          [StateType.Dirty]: {\n            on: {\n              [prefix(EventType.Reset)]: StateType.Pristine\n            }\n          }\n        }\n      },\n      [StateType.Touched]: {\n        initial: StateType.Untouched,\n        states: {\n          [StateType.Untouched]: {\n            on: {\n              [prefix(EventType.Focus)]: {\n                target: StateType.Touching\n              }\n            }\n          },\n          [StateType.Touching]: {\n            on: {\n              // [prefix(EventType.Reset)]: StateType.Untouched,\n              [prefix(EventType.Blur)]: {\n                target: StateType.Touched,\n              }\n            }\n          },\n          [StateType.Touched]: {\n            on: {\n              [prefix(EventType.Reset)]: StateType.Untouched\n            }\n          }\n        }\n      },\n      [StateType.Valid]: {\n        initial: StateType.Invalid,\n        states: {\n          [StateType.Invalid]: {\n            '': {\n              target: StateType.Valid,\n              cond: prefix(\"isValid\")\n            },\n            on: {\n              [prefix(EventType.Change)]: {\n                target: StateType.Valid,\n                cond: prefix(\"isValid\")\n              }\n            }\n          },\n          [StateType.Valid]: {\n            on: {\n              [prefix(EventType.Change)]: {\n                target: StateType.Invalid,\n                cond: prefix(\"isNotValid\")\n              },\n              [prefix(EventType.Reset)]: StateType.Invalid\n            }\n          }\n        }\n      },\n      [StateType.Focused]: {\n        initial: StateType.Blurred,\n        states: {\n          [StateType.Focused]: {\n            on: {\n              [prefix(EventType.Blur)]: StateType.Blurred\n            }\n          },\n          [StateType.Blurred]: {\n            on: {\n              [prefix(EventType.Focus)]: StateType.Focused,\n            }\n          }\n        }\n      }\n    }\n  };\n};\n\nexport type ConfigureParams<T, I extends string> = {\n  id: I;\n  isValid: (value: Option<T>) => boolean;\n  initialValue?: T;\n};\n\n/**\n * Create configuration for a input control state machine.\n * @param param0\n */\n\nexport function configure<T, I extends string>(\n  params: ConfigureParams<T, I>\n): Config<T, I> {\n  type ChangeEvent = Extract<Event<T>, { type: typeof EventType.Change }>;\n  type FocusEvent = Extract<Event<T>, { type: typeof EventType.Focus }>;\n  type BlurEvent = Extract<Event<T>, { type: typeof EventType.Blur }>;\n  type ResetEvent = Extract<Event<T>, { type: typeof EventType.Reset }>;\n\n  const { id, isValid, initialValue } = params;\n  \n  const prefix = prefixer(id);\n\n  const api: Api<T, I> = {\n    eventCreators: {\n      change: (value: T): ChangeEvent => ({\n        type: prefix(EventType.Change),\n        value\n      }),\n      reset: (): ResetEvent => ({\n        type: prefix(EventType.Reset),\n      }),\n      focus: (): FocusEvent => ({ type: prefix(EventType.Focus) }),\n      blur: (): BlurEvent => ({ type: prefix(EventType.Blur) })\n    },\n    selector: (ctx: Context<T, I>) => ctx[id] ?? none\n  };\n\n  const isChangeEvent = (event: Event<T>): event is ChangeEvent =>\n    event.type === prefix(EventType.Change);\n\n  const config: MachineConfig<T, I> = configuration({ id });\n\n  const assignChange = assign<Context<T, I>, Event<T>>((ctx, e) => {\n    const value = isChangeEvent(e) ? fromNullable(e.value) : ctx[id];\n\n    return {\n      [id]: value\n    } as any;\n  });\n\n  const assignInitialValue = send<Context<T, I>, Event<T>>(\n    (ctx, e): ChangeEvent => {\n      return {\n        type: prefix(EventType.Change),\n        value: initialValue,\n        isRobot: true\n      };\n    }\n  );\n\n  const options: MachineOptions<T, I> = {\n    actions: {\n      [prefix(\"assignInitialValue\")]: assignInitialValue,\n      [prefix(\"assignChange\")]: assignChange\n    },\n    guards: {\n      [prefix('isHuman')]: (_, e) => isChangeEvent(e) ? !e.isRobot : false,\n      [prefix(\"isValid\")]: (ctx: Context<T, I>, e: Event<T>) =>\n        isValid(isChangeEvent(e) ? fromNullable(e.value) : api.selector(ctx)),\n      [prefix(`isNotValid`)]: (ctx: Context<T, I>, e: Event<T>) =>\n        !isValid(isChangeEvent(e) ? fromNullable(e.value) : api.selector(ctx))\n    }\n  };\n\n  return {\n    id,\n    config,\n    options,\n    api\n  };\n}\n\n/**\n * Create a [[Machine]] for controlling inputs.\n *\n * @typeparam T The type the machine outputs. Defaults to `string`\n * @param initialValue The initial value of the machine\n * @returns A state machine for controlling inputs.\n */\nexport const createMachine = <T, I extends string>({\n  id,\n  initialValue,\n  isValid = (_: Option<T>) => true\n}: {\n  id: I;\n  initialValue?: T;\n  isValid?: (value: Option<T>) => boolean;\n}) => {\n  const { config, options, api } = configure({ id, isValid, initialValue });\n\n  return Object.assign(\n    createStateMachine<Context<T, I>, Event<T>, State<T, I>>(\n      {\n        id,\n        ...config\n      },\n      options\n    ),\n    { api }\n  );\n};\n","import { Option, fold as foldOption } from \"fp-ts/lib/Option\";\nimport { pipe } from \"fp-ts/lib/pipeable\";\nimport { constant } from \"fp-ts/lib/function\";\n\nimport { configure } from \"./input-control\";\n\nexport const { id, config, options, api } = configure({\n  id: \"username\",\n  isValid: (maybeUsername: Option<string>) =>\n    pipe(\n      maybeUsername,\n      foldOption(constant(false), str => !!str.trim())\n    )\n});\n","import { Option, fold as foldOption } from \"fp-ts/lib/Option\";\nimport { pipe } from \"fp-ts/lib/pipeable\";\nimport { constant } from \"fp-ts/lib/function\";\n\nimport { configure } from \"./input-control\";\n\nexport const { id, config, options, api } = configure({\n  id: \"password\",\n  isValid: (maybePassword: Option<string>) =>\n    pipe(\n      maybePassword,\n      foldOption(constant(false), str => !!str.trim())\n    )\n});\n","import { Option } from \"fp-ts/lib/Option\";\nimport { Either } from \"fp-ts/lib/Either\";\n\nimport {\n  MachineOptions as XStateMachineOptions,\n  MachineConfig as XStateMachineConfig,\n  StateSchema as XStateStateSchema,\n  DoneInvokeEvent,\n  ErrorPlatformEvent\n} from \"xstate\";\n\nimport { ComposableMachineConfig } from \"../../xstate\";\n\nexport const StateTypeInProgress = \"inProgress\" as const;\nexport const StateTypeSubmitting = \"submitting\" as const;\nexport const StateTypeDone = \"done\" as const;\n\nexport const StateType = {\n  InProgress: StateTypeInProgress,\n  Submitting: StateTypeSubmitting,\n  Done: StateTypeDone,\n};\n\nexport const EventTypeSubmit: \"SUBMIT\" = \"SUBMIT\";\nexport const EventTypeReset: \"RESET\" = \"RESET\";\n\n/**\n * Dictionary of input control state event types.\n */\nexport const EventType = {\n  Submit: EventTypeSubmit,\n  Reset: EventTypeReset,\n};\n\n/**\n * Events dispatched for the input control state machine.\n */\nexport type Event<L, R> =\n  | { type: typeof EventType.Submit, promiser: () => Promise<Either<L, R>> }\n  | { type: typeof EventType.Reset }\n  | DoneInvokeEvent<Either<L, R>>\n  | ErrorPlatformEvent\n/**\n * Possible states for the input control machine.\n *\n * @typeparam T See [[Context.value]]\n */\nexport type State<L, R, I extends string> = \n  | { value: typeof StateType.InProgress, context: Context<L, R, I>  }\n  | { value: typeof StateType.Submitting, context: Context<L, R, I>  }\n\n/**\n * Context state for input-control machines.\n *\n * @typeparam T Type of the data the input control outputs. Defaults to `string`\n */\nexport type Context<L, R, I extends string> = {\n  [P in I]: Option<Either<L, R>>;\n};\n\nexport interface StateSchema<L, R, I extends string> extends XStateStateSchema<Context<L, R, I>> {\n  context: {},\n  states: {\n    [StateType.InProgress]: {},\n    [StateType.Submitting]: {},\n    [StateType.Done]: {}\n  }\n}\n\nexport interface Api<L, R, I extends string> {\n  eventCreators: {\n    submit: (promiser: () => Promise<Either<L, R>>) => Extract<Event<L, R>, { type: typeof EventType.Submit }>\n    reset: () => Extract<Event<L, R>, { type: typeof EventType.Reset }>;\n  };\n  selector: (context: Context<L, R, I>) => Context<L, R, I>[I]\n}\n\nexport type MachineOptions<L, R, I extends string> = Partial<\n  XStateMachineOptions<Context<L, R, I>, Event<L, R>>\n>;\n\nexport type MachineConfig<L, R, I extends string> = XStateMachineConfig<\n  Context<L, R, I>,\n  StateSchema<L, R, I>,\n  Event<L, R>\n>;\n\nexport type Config<L, R, I extends string> = ComposableMachineConfig<\n  Api<L, R, I>,\n  Context<L, R, I>,\n  StateSchema<L, R, I>,\n  Event<L, R>,\n  I\n>;\n","import {\n  EventObject,\n  StateSchema,\n  MachineConfig,\n  MachineOptions\n} from \"xstate\";\n\nimport mergeOptions from \"./mergeOptions\";\n\nexport interface ComposableMachineConfig<\n  TApi,\n  TContext,\n  TStateSchema extends StateSchema<any>,\n  TEvent extends EventObject,\n  I extends string\n> {\n  config: MachineConfig<TContext, TStateSchema, TEvent>;\n  options: Partial<MachineOptions<TContext, TEvent>>;\n  api: TApi;\n  id: I;\n}\n\nexport const combine = <I extends string>(id: I) => {\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>): ComposableMachineConfig<Record<I1, TApi1>, TContext1, any, TEvent1, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2>, TContext1 & TContext2, any, TEvent1 | TEvent2, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3>, TContext1 & TContext2 & TContext3, any, TEvent1 | TEvent2 | TEvent3, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4>, TContext1 & TContext2 & TContext3 & TContext4, any, TEvent1 | TEvent2 | TEvent3 | TEvent4, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 \n| TEvent7 | TEvent8 | TEvent9, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, \nTEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, \nTContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, \nTApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: \nComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, \nTApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | \nTEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 \n& TContext22, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, \nTEvent23, I23>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, \nTEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, \nTEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string, TApi26, TContext26, TEvent26 extends EventObject, I26 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, \nTEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>, t26: ComposableMachineConfig<TApi26, TContext26, any, TEvent26, I26>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25> & Record<I26, TApi26>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25 & TContext26, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25 | TEvent26, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string, TApi26, TContext26, TEvent26 extends EventObject, I26 extends string, TApi27, TContext27, TEvent27 extends EventObject, I27 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, \nTEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>, t26: ComposableMachineConfig<TApi26, TContext26, any, TEvent26, I26>, t27: ComposableMachineConfig<TApi27, TContext27, any, TEvent27, I27>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25> & Record<I26, TApi26> & Record<I27, TApi27>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25 & TContext26 & TContext27, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 \n| TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25 | TEvent26 | TEvent27, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string, TApi26, TContext26, TEvent26 extends EventObject, I26 extends string, TApi27, TContext27, TEvent27 extends EventObject, I27 extends string, TApi28, TContext28, TEvent28 extends EventObject, I28 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, \nTEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, \nTEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>, t26: ComposableMachineConfig<TApi26, TContext26, any, TEvent26, I26>, t27: ComposableMachineConfig<TApi27, TContext27, any, TEvent27, I27>, t28: ComposableMachineConfig<TApi28, TContext28, any, TEvent28, I28>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25> & Record<I26, TApi26> & Record<I27, TApi27> & Record<I28, TApi28>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25 & TContext26 & TContext27 & TContext28, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 \n| TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25 | TEvent26 | TEvent27 | TEvent28, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string, TApi26, TContext26, TEvent26 extends EventObject, I26 extends string, TApi27, TContext27, TEvent27 extends EventObject, I27 extends string, TApi28, TContext28, TEvent28 extends EventObject, I28 extends string, TApi29, TContext29, TEvent29 extends EventObject, I29 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, \nany, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, TEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, \nTEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>, t26: ComposableMachineConfig<TApi26, TContext26, any, TEvent26, I26>, t27: ComposableMachineConfig<TApi27, TContext27, any, TEvent27, I27>, t28: ComposableMachineConfig<TApi28, TContext28, any, TEvent28, I28>, t29: ComposableMachineConfig<TApi29, TContext29, any, TEvent29, I29>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25> & Record<I26, TApi26> & Record<I27, TApi27> & Record<I28, TApi28> & Record<I29, TApi29>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 \n& TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25 & TContext26 & TContext27 & TContext28 & TContext29, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25 | TEvent26 | TEvent27 | TEvent28 | TEvent29, I>;\n  /* prettier-ignore */\n  function compose<TApi1, TContext1, TEvent1 extends EventObject, I1 extends string, TApi2, TContext2, TEvent2 extends EventObject, I2 extends string, TApi3, TContext3, TEvent3 extends EventObject, I3 extends string, TApi4, TContext4, TEvent4 extends EventObject, I4 extends string, TApi5, TContext5, TEvent5 extends EventObject, I5 extends string, TApi6, TContext6, TEvent6 extends EventObject, I6 extends string, TApi7, TContext7, TEvent7 extends EventObject, I7 extends string, TApi8, TContext8, TEvent8 extends EventObject, I8 extends string, TApi9, TContext9, TEvent9 extends EventObject, I9 extends string, TApi10, TContext10, TEvent10 extends EventObject, I10 extends string, TApi11, TContext11, TEvent11 extends EventObject, I11 extends string, TApi12, TContext12, TEvent12 extends EventObject, I12 extends string, TApi13, TContext13, TEvent13 extends EventObject, I13 extends string, TApi14, TContext14, TEvent14 extends EventObject, I14 extends string, TApi15, TContext15, TEvent15 extends EventObject, I15 extends string, TApi16, TContext16, TEvent16 extends EventObject, I16 extends string, TApi17, TContext17, TEvent17 extends EventObject, I17 extends string, TApi18, TContext18, TEvent18 extends EventObject, I18 extends string, TApi19, TContext19, TEvent19 extends EventObject, I19 extends string, TApi20, TContext20, TEvent20 extends EventObject, I20 extends string, TApi21, TContext21, TEvent21 extends EventObject, I21 extends string, TApi22, TContext22, TEvent22 extends EventObject, I22 extends string, TApi23, TContext23, TEvent23 extends EventObject, I23 extends string, TApi24, TContext24, TEvent24 extends EventObject, I24 extends string, TApi25, TContext25, TEvent25 extends EventObject, I25 extends string, TApi26, TContext26, TEvent26 extends EventObject, I26 extends string, TApi27, TContext27, TEvent27 extends EventObject, I27 extends string, TApi28, TContext28, TEvent28 extends EventObject, I28 extends string, TApi29, TContext29, TEvent29 extends EventObject, I29 extends string, TApi30, TContext30, TEvent30 extends EventObject, I30 extends string>(t1: ComposableMachineConfig<TApi1, TContext1, any, TEvent1, I1>, t2: ComposableMachineConfig<TApi2, TContext2, any, TEvent2, I2>, t3: ComposableMachineConfig<TApi3, TContext3, any, TEvent3, I3>, t4: ComposableMachineConfig<TApi4, TContext4, any, TEvent4, I4>, t5: ComposableMachineConfig<TApi5, TContext5, any, TEvent5, I5>, t6: ComposableMachineConfig<TApi6, TContext6, any, TEvent6, I6>, t7: ComposableMachineConfig<TApi7, TContext7, any, TEvent7, I7>, t8: ComposableMachineConfig<TApi8, TContext8, any, TEvent8, I8>, t9: ComposableMachineConfig<TApi9, TContext9, any, TEvent9, I9>, t10: ComposableMachineConfig<TApi10, TContext10, any, TEvent10, I10>, t11: ComposableMachineConfig<TApi11, TContext11, any, TEvent11, I11>, t12: ComposableMachineConfig<TApi12, TContext12, any, TEvent12, I12>, t13: ComposableMachineConfig<TApi13, TContext13, any, TEvent13, I13>, t14: ComposableMachineConfig<TApi14, TContext14, any, TEvent14, I14>, t15: ComposableMachineConfig<TApi15, TContext15, any, TEvent15, I15>, t16: ComposableMachineConfig<TApi16, TContext16, any, \nTEvent16, I16>, t17: ComposableMachineConfig<TApi17, TContext17, any, TEvent17, I17>, t18: ComposableMachineConfig<TApi18, TContext18, any, TEvent18, I18>, t19: ComposableMachineConfig<TApi19, TContext19, any, TEvent19, I19>, t20: ComposableMachineConfig<TApi20, TContext20, any, TEvent20, I20>, t21: ComposableMachineConfig<TApi21, TContext21, any, TEvent21, I21>, t22: ComposableMachineConfig<TApi22, TContext22, any, TEvent22, I22>, t23: ComposableMachineConfig<TApi23, TContext23, any, TEvent23, I23>, t24: ComposableMachineConfig<TApi24, TContext24, any, TEvent24, I24>, t25: ComposableMachineConfig<TApi25, TContext25, any, TEvent25, I25>, t26: ComposableMachineConfig<TApi26, TContext26, any, TEvent26, I26>, t27: ComposableMachineConfig<TApi27, TContext27, any, TEvent27, I27>, t28: ComposableMachineConfig<TApi28, TContext28, any, TEvent28, I28>, t29: ComposableMachineConfig<TApi29, TContext29, any, TEvent29, I29>, t30: ComposableMachineConfig<TApi30, TContext30, any, TEvent30, I30>): ComposableMachineConfig<Record<I1, TApi1> & Record<I2, TApi2> & Record<I3, TApi3> & Record<I4, TApi4> & Record<I5, TApi5> & Record<I6, TApi6> & Record<I7, TApi7> & Record<I8, TApi8> & Record<I9, TApi9> & Record<I10, TApi10> & Record<I11, TApi11> & Record<I12, TApi12> & Record<I13, TApi13> & Record<I14, TApi14> & Record<I15, TApi15> & Record<I16, TApi16> & Record<I17, TApi17> & Record<I18, TApi18> & Record<I19, TApi19> & Record<I20, TApi20> & Record<I21, TApi21> & Record<I22, TApi22> & Record<I23, TApi23> & Record<I24, TApi24> & Record<I25, TApi25> & Record<I26, TApi26> & Record<I27, TApi27> & Record<I28, TApi28> & Record<I29, TApi29> & Record<I30, TApi30>, TContext1 & TContext2 & TContext3 & TContext4 & TContext5 & TContext6 & TContext7 & TContext8 & TContext9 & TContext10 & TContext11 & TContext12 & TContext13 & TContext14 & TContext15 & TContext16 & TContext17 & TContext18 & TContext19 & TContext20 & TContext21 & TContext22 & TContext23 & TContext24 & TContext25 & TContext26 & TContext27 & TContext28 & TContext29 & TContext30, any, TEvent1 | TEvent2 | TEvent3 | TEvent4 | TEvent5 | TEvent6 | TEvent7 | TEvent8 | TEvent9 | TEvent10 | TEvent11 | TEvent12 | TEvent13 | TEvent14 | TEvent15 | TEvent16 | TEvent17 | TEvent18 | TEvent19 | TEvent20 | TEvent21 | TEvent22 | TEvent23 | TEvent24 | TEvent25 | TEvent26 | TEvent27 | TEvent28 | TEvent29 | TEvent30, I>;\n  function compose(\n    ...args: ComposableMachineConfig<any, any, any, any, string>[]\n  ): ComposableMachineConfig<any, any, any, any, any> {\n    const { api, config, options } = args.reduce(\n      (acc, next: ComposableMachineConfig<any, any, any, any, string>) => {\n        acc.api[next.id] = next.api;\n        acc.config.states[next.id] = next.config;\n        acc.options = mergeOptions(acc.options, next.options);\n        return acc;\n      },\n      {\n        api: {} as Record<string, any>,\n        config: {\n          id,\n          type: \"parallel\" as \"parallel\",\n          states: {} as Record<string, MachineConfig<any, any, any>>\n        },\n        options: {}\n      }\n    );\n\n    return {\n      id,\n      api,\n      config,\n      options\n    };\n  }\n\n  return compose;\n};\n","// Libs\nimport { assign } from \"xstate\";\nimport * as O from \"fp-ts/lib/Option\";\nimport * as E from \"fp-ts/lib/Either\";\n\nimport {\n  StateType,\n  EventType,\n  Event,\n  Context,\n  Api,\n  MachineOptions,\n  MachineConfig,\n  Config\n} from \"./types\";\n\nimport { prefixer } from \"../../utils\";\nimport { isDoneInvokeEvent, isErrorPlatformEvent } from \"../../xstate\";\n\n/**\n * Raw configuration for input control state machines\n */\nexport const configuration = <L, R, I extends string>(options: { id: I }) => {\n  const { id } = options;\n\n  const prefix = prefixer(id);\n\n  return {\n    initial: StateType.InProgress,\n    on: {\n      [prefix(EventType.Reset)]: {\n        target: `${id}.${StateType.InProgress}`,\n        actions: prefix(\"assignInitial\")\n      }\n    },\n    states: {\n      [StateType.InProgress]: {\n        entry: prefix(\"assignInitial\"),\n        on: {\n          [prefix(EventType.Submit)]: {\n            target: StateType.Submitting\n          }\n        }\n      },\n      [StateType.Submitting]: {\n        invoke: {\n          id: prefix(\"submitOperation\"),\n          src: prefix(\"submitOperation\"),\n          onDone: StateType.Done,\n          onError:  StateType.Done\n        },\n      },\n      [StateType.Done]: {\n        entry: prefix(\"assignDone\")\n      },\n    }\n  };\n};\n\nexport type ConfigureParams<L, R, I extends string> = {\n  id: I;\n  initialValue?: E.Either<L, R>;\n};\n\n/**\n * Create configuration for a input control state machine.\n * @param param0\n */\n\nexport function configure<L, R, I extends string>(\n  params: ConfigureParams<L, R, I>\n): Config<L, R, I> {\n  type SubmitEvent = Extract<Event<L, R>, { type: typeof EventType.Submit }>;\n  type ResetEvent = Extract<Event<L, R>, { type: typeof EventType.Reset }>;\n\n  const { id } = params;\n\n  const prefix = prefixer(id);\n\n  const api: Api<L, R, I> = {\n    eventCreators: {\n      submit: (promiser: () => Promise<E.Either<L, R>>): SubmitEvent => ({\n        type: prefix(EventType.Submit),\n        promiser\n      }),\n      reset: (): ResetEvent => ({ type: prefix(EventType.Reset) })\n    },\n    selector: (ctx: Context<L, R, I>) => ctx[id] ?? O.none\n  };\n\n  const isEvent = <E extends Event<L, R>[\"type\"]>(eventType: E) => (\n    event: Event<L, R>\n  ): event is Extract<Event<L, R>, { type: E }> =>\n    event.type === prefix(eventType);\n\n  const isSubmitEvent = isEvent(EventType.Submit);\n\n  const config: MachineConfig<L, R, I> = configuration({ id });\n\n  const assignInitial = assign<Context<L, R, I>, Event<L, R>>(ctx => {\n    return {\n      [id]: O.none\n    } as any;\n  });\n\n  const c = <K extends string, V>(key: K, value: V): { [P in K]: V } =>\n    ({ [key]: value } as any);\n\n  const assignDone = assign<Context<L, R, I>, Event<L, R>>(\n    (ctx, e): Partial<Context<L, R, I>> => {\n      if (isErrorPlatformEvent(e)) {\n        return c(id, O.some(E.left<L, R>(e.data)) as any)\n      }\n\n      return (isDoneInvokeEvent(e) ? c(id, O.some(e.data)) : ctx) as {};\n    }\n  );\n\n  const options: MachineOptions<L, R, I> = {\n    services: {\n      [prefix(\"submitOperation\")]: ((_ctx: Context<L, R, I>, e: Event<L, R>) =>\n        isSubmitEvent(e)\n          ? e.promiser()\n          : Promise.reject(\"submitService invoked by non-submit event!\")) as any\n    },\n    actions: {\n      [prefix(\"assignInitial\")]: assignInitial,\n      [prefix(\"assignDone\")]: assignDone,\n      // [prefix(\"assignError\")]: assignError\n    },\n    guards: {\n      // [prefix(\"canSubmit\")]: params.canSubmit,\n    }\n  };\n\n  return {\n    id,\n    config,\n    options,\n    api\n  };\n}\n","import { DoneInvokeEvent, ErrorPlatformEvent } from \"xstate\";\n\nexport * from \"./composable\";\nexport { default as mergeOptions } from \"./mergeOptions\";\nexport { default as withContext } from \"./withContext\";\nexport { default as useServiceLogger } from \"./useServiceLogger\";\n\nexport const isDoneInvokeEvent = <T, E extends { type: string }>(\n  event: E | DoneInvokeEvent<T>\n): event is DoneInvokeEvent<T> => /^done.invoke/.test(event.type);\n\nexport const isErrorPlatformEvent = <T, E extends { type: string }>(\n  event: E | ErrorPlatformEvent\n): event is ErrorPlatformEvent => /^error.platform/.test(event.type);\n","import { configure } from \"./operator\";\n\nimport  { Failure } from '../apis/q'\nimport { User } from \"../users/types\";\n\nexport const { id, config, options, api } =  configure<Failure, User, \"status\">({\n  id: \"status\"\n});","import { createMachine as createStateMachine } from \"xstate\";\n\nimport { combine } from \"../xstate\";\n\nimport * as usernameConfig from \"./username\";\nimport * as passwordConfig from \"./password\";\nimport * as operationConfig  from \"./login-operator\";\n\nexport const { config, api, options } = combine(\"login\")(\n  usernameConfig,\n  passwordConfig,\n  operationConfig\n);\n\nexport const machine = createStateMachine(config, options);\n","import * as React from \"react\";\n\n// Components\nimport Button from \"../../../modules/components/input-controls/Button\";\n\n// Modules\nimport { PropsOf } from \"../../../modules/types\";\nimport { Event as InputControlEvent } from \"../../../modules/machines/input-control\";\n\nimport { api } from \"../../../modules/machines/login\";\n\nexport interface PropsResetButton\n  extends Omit<PropsOf<typeof Button>, \"onClick\" | \"children\"> {\n  children: React.ReactNode;\n  send: (evt: InputControlEvent<string> | InputControlEvent<string>[]) => void;\n}\n\nconst ResetButton = (props: PropsResetButton) => (\n  <Button\n    data-test=\"btn-reset\"\n    type=\"button\"\n    theme=\"secondary\"\n    onClick={() => {\n      props.send([\n        api.status.eventCreators.reset(),\n        api.username.eventCreators.reset(),\n        api.password.eventCreators.reset()\n      ]);\n    }}\n  >\n    {props.children}\n  </Button>\n);\n\nexport default ResetButton;\n","import * as t from \"io-ts\";\nimport * as E from \"fp-ts/es6/Either\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport { randomInt } from \"fp-ts/lib/Random\";\n\nimport { constant, identity } from \"fp-ts/es6/function\";\n\nexport const URL = \"https://jsonplaceholder.typicode.com/users/1\";\n\nexport type Params = { username: string; password: string };\n\nconst ApiFailure = t.type({\n  code: t.number,\n  error: t.string\n});\n\nexport type ApiFailure = t.TypeOf<typeof ApiFailure>;\n\nexport type Failure =\n  | { reason: \"api\"; error: ApiFailure }\n  | { reason: \"decode\"; error: t.Errors }\n  | { reason: \"error\"; error: Error };\n\nexport type QResponse<T> = E.Either<Failure, T>;\n\nconst isFailureReason = <R extends Failure[\"reason\"]>(reason: R) => (\n  failure: Failure\n): failure is Extract<Failure, { reason: R }> => failure.reason === reason;\n\nconst createFailure = <R extends Failure[\"reason\"]>(reason: R) => (\n  error: Extract<Failure, { reason: R }>[\"error\"]\n): Failure => ({ reason, error } as any);\n\nexport const createApiFailure = createFailure(\"api\");\nexport const createDecodeFailure = createFailure(\"decode\");\nexport const createErrorFailure = createFailure(\"error\");\n\nexport const isApiFailure = isFailureReason(\"api\");\nexport const isDecodeFailure = isFailureReason(\"decode\");\nexport const isErrorFailure = isFailureReason(\"error\");\n\nif (process.env.NODE_ENV === \"development\" && process.env.E2E !== \"on\") {\n  var shuffle = [1, 2, 3, 4];\n}\n\n/**\n * Wrapper for making type safe promise based network requests that can fail.\n *\n * @param decoder JSON response decoder created using io-ts\n * @returns A function that takes a function that returns a promise and returns a response.\n */\n\nexport const q = <T>(\n  decoder: t.Type<T>\n): ((promiser: () => Promise<Response>) => Promise<QResponse<T>>) => async (\n  promiser: () => Promise<Response>\n): Promise<QResponse<T>> => {\n  try {\n    const response = await promiser();\n    let json = await response.json();\n    console.log(JSON.stringify(json, null, 2));\n    if (process.env.NODE_ENV === \"development\" && process.env.E2E !== \"on\") {\n      // Iterate through all possible failure cases in development mode\n      const i = shuffle.shift();\n      i != null && shuffle.push(i);\n\n      if (i === 2) {\n        // Simulate ApiFailure\n        json = {\n          code: randomInt(0, 100)(),\n          error: \"Invalid username or password\"\n        };\n      } else if (i === 3) {\n        // Simulate Error\n        throw Error(\".. my hands up in the air sometime!\");\n      } else if (i === 4) {\n        // Simulate decoding error\n        delete json.username;\n      }\n    }\n\n    return pipe(\n      // Try to decode the incoming JSON with the given type decoder\n      decoder.decode(json),\n      // Map failure of the decoding process:\n      E.mapLeft(\n        (decodeError): Failure =>\n          pipe(\n            ApiFailure.decode(json),\n            // First try to decode the json as an ApiFailure\n            E.map(createApiFailure),\n            // But if that fails keep the initial decoding failure\n            E.fold(constant(createDecodeFailure(decodeError)), identity)\n          )\n      )\n    );\n  } catch (error) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(error);\n    }\n\n    return E.left({\n      reason: \"error\",\n      error: error instanceof Error ? error : Error(`${error}`)\n    });\n  }\n};\n\nexport default q;\n","import * as React from \"react\";\n\nimport { Failure, isApiFailure, isDecodeFailure } from \"../../apis/q\";\nimport { format } from \"../../utils\";\n\nexport interface PropsFailureMessage {\n  failure: Failure;\n  error?: string;\n  decode?: string;\n  api?: string;\n}\n\nconst f = (str?: string, ...args: any[]) => (str ? format(str, ...args) : null);\n\nconst FailureMessage = (props: PropsFailureMessage) => {\n  const failureMessage = isApiFailure(props.failure)\n    ? f(props.api, props.failure.error.code, props.failure.error.error)\n    : isDecodeFailure(props.failure)\n    ? f(props.decode)\n    : f(props.error, props.failure.error);\n\n  return failureMessage ? <span data-test=\"FailureMessage\">{failureMessage}</span> : null\n};\n\nexport default FailureMessage","import * as React from \"react\";\n\nimport CFailureMessage from \"../../../modules/components/FailureMessage\";\nimport { Failure } from \"../../../modules/apis/q\";\n\nimport text from './text.json'\n\nexport interface PropsFailureMessage {\n  failure: Failure;\n}\n\nconst FailureMessage = (props: PropsFailureMessage) => (\n  <CFailureMessage\n    failure={props.failure}\n    api={text[\"The server responded with code %code\"]}\n    decode={text[\"The server has responded with an unknown response.\"]}\n    error={text[\"The following error has occurred\"]}\n  />\n);\n\nexport default FailureMessage\n","import * as React from 'react'\n\nimport Typography from '../Typography'\n\nimport text from './text.json'\nimport { useTranslation } from 'react-i18next'\n\nexport interface PropsLoginForm {\n  usernameInput: React.ReactNode,\n  passwordInput: React.ReactNode,\n  loginButton: React.ReactNode,\n  resetButton?: React.ReactNode,\n}\n\nconst LoginForm = (props: PropsLoginForm) => {\n  const [t, i18n] = useTranslation();\n\n  return (\n  <form>\n      <Typography use={\"headline3\"}>{`[${t(text.titleOfShow)}]`}</Typography>\n      <br />\n      <br />\n      {props.usernameInput}\n      <br />\n      {props.passwordInput}\n      <br />\n      <div>\n        {props.loginButton}\n        {props.resetButton}\n      </div>\n    </form>\n)\n  }\n\nexport default LoginForm","import * as React from \"react\";\n\nimport Button from \"../../../modules/components/input-controls/Button\";\nimport { PropsOf } from \"../../../modules/types\";\n\nimport text from './text.json'\n\nexport interface PropsLoginButton extends PropsOf<typeof Button> {\n  disabled: boolean;\n  onClick: () => void;\n}\n\nconst LoginButton = (props: PropsLoginButton) => (\n  <Button\n    {...props}\n    type=\"button\"\n    data-test=\"btn-login\"\n    raised\n    disabled={props.disabled}\n    onClick={props.onClick}\n  >\n    {text.Login}\n  </Button>\n);\n\nexport default LoginButton;\n","import * as React from 'react'\nimport Typography from '../../Typography'\nimport text from './text.json'\n\nexport default <Typography use=\"headline6\">{text.usernameLabel}</Typography>","import * as React from \"react\";\n\nimport { Icon } from '@rmwc/icon'\n\nimport Input from \"../Input\";\nimport usernameLabel from \"../../labels/usernameLabel\";\n\nimport { PropsOf } from '../../../types'\n\ntype InputProps = PropsOf<typeof Input>;\n\nexport interface PropsUsername {\n  value: string;\n  onChange: InputProps[\"onChange\"];\n  onFocus: InputProps[\"onFocus\"];\n  onBlur: InputProps[\"onBlur\"];\n  style?: React.CSSProperties;\n  disabled: boolean;\n  invalid: boolean;\n  focused: boolean;\n}\n\nconst styles = {\n  block: { display: \"block\" }\n};\n\nexport const UsernameInput = (props: PropsUsername) => (\n  <>\n    <div>{usernameLabel}</div>\n    <div>\n      <Input\n        data-test=\"input-username\"\n        value={props.value}\n        placeholder=\"Username\"\n        required\n        invalid={props.invalid}\n        disabled={props.disabled}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        style={styles.block}\n        helpText={{\n          children: props.invalid ? <span>{\"A username is required!\"}</span> : \"\",\n          validationMsg: true,\n        }}\n        icon={<Icon icon={'person'} theme={props.focused ? 'primary' : '' as any} />}\n      />\n    </div>\n  </>\n);\n\nexport default UsernameInput;\n","\nimport { identity, constant, flow } from \"fp-ts/lib/function\";\nimport { pipe } from \"fp-ts/lib/pipeable\";\nimport { fold as foldOption } from \"fp-ts/lib/Option\";\n\nimport { Api, Context, Event } from \"../../machines/input-control\";\nimport Input from \"./Input\";\n\nimport { getter2 } from \"../../fp\";\n\nimport { PropsOf } from \"../../types\";\n\nexport type ProvidedInputProps = Required<\n  Pick<PropsOf<typeof Input>, \"onChange\" | \"onFocus\" | \"onBlur\"> & { value: string }\n>;\n\nexport type PropsFromMachine<\n  I extends string,\n  TContext extends Context<string, I>\n> = {\n  send: (evt: Event<string>) => void;\n  api: Api<string, I>;\n  context: TContext;\n  children: (inputProps: ProvidedInputProps) => JSX.Element;\n};\n\n  const bind = <T extends any[]>(f: (...t: T) => any) => (...t: T) => () => {\n  f(...t);\n};\n\nconst getEventTargetValue = getter2('currentTarget', 'value')\n\nconst FromMachine = <I extends string, TContext extends Context<string, I>>(\n  props: PropsFromMachine<I, TContext>\n) => {\n  const value = pipe(\n    props.api.selector(props.context),\n    foldOption(constant(\"\"), identity)\n  );\n\n  const inputProps: ProvidedInputProps = {\n    value,\n    onChange: flow(\n      getEventTargetValue,\n      props.api.eventCreators.change,\n      props.send\n    ),\n    onFocus: bind(props.send)(props.api.eventCreators.focus()),\n    onBlur: bind(props.send)(props.api.eventCreators.blur())\n  };\n\n  return props.children(inputProps);\n};\n\nexport default FromMachine;\n","import * as React from \"react\";\nimport { State, EventObject } from \"xstate\";\n\nimport {\n  Context as InputControlContext,\n  Event as InputControlEvent\n} from \"../../../modules/machines/input-control\";\n\nimport Username from \"../../../modules/components/input-controls/Username\";\n\nimport FromInputControlMachine, {\n  ProvidedInputProps\n} from \"../../../modules/components/input-controls/FromMachine\";\n\n\nimport { api } from \"../../../modules/machines/username\";\n\n\nconst usernameRenderProp = <T, E extends EventObject>(current: State<T, E>) => (\n  props: ProvidedInputProps\n) => (\n  <Username\n    {...props}\n    disabled={current.matches(\"status.submitting\")}\n    focused={current.matches(\"username.focused.focused\")}\n    invalid={\n      current.matches(\"username.touched.touched\") &&\n      current.matches(\"username.valid.invalid\")\n    }\n  />\n);\n\nexport type PropsUsernameInput<\n  TContext extends InputControlContext<string, \"username\">,\n  TEvent extends EventObject,\n  TState extends State<TContext, any, any, any>\n> = {\n  send: (evt: InputControlEvent<string>) => void;\n  context: TContext;\n  current: TState;\n};\n\nconst UsernameInput = <\n  TContext extends InputControlContext<string, \"username\">,\n  TEvent extends EventObject,\n  TState extends State<TContext, any, any, any>\n>(\n  props: PropsUsernameInput<TContext, TEvent, TState>\n) => (\n  <FromInputControlMachine\n    send={props.send}\n    context={props.current.context}\n    api={api}\n  >\n    {usernameRenderProp(props.current)}\n  </FromInputControlMachine>\n);\n\nexport default UsernameInput","import * as React from 'react'\nimport Typography from '../../Typography'\nimport text from './text.json'\n\nexport default <Typography use=\"headline6\">{text.passwordLabel}</Typography>","import * as React from \"react\";\n\nimport { Icon } from '@rmwc/icon'\n\nimport Input from \"../Input\";\nimport passwordLabel from \"../../labels/passwordLabel\";\nimport { PropsOf } from \"../../../types\";\n\ntype InputProps = PropsOf<typeof Input>;\n\nexport interface PropsPassword {\n  value: string;\n  onChange: InputProps[\"onChange\"];\n  onFocus: InputProps[\"onFocus\"];\n  onBlur: InputProps[\"onBlur\"];\n  style?: React.CSSProperties;\n  disabled: boolean;\n  invalid: boolean;\n  focused: boolean;\n}\n\nconst styles = {\n  block: { display: \"block\" }\n};\n\nexport const PasswordInput = (props: PropsPassword) => (\n  <>\n    <div>{passwordLabel}</div>\n    <div>\n      <Input\n        data-test=\"input-password\"\n        value={props.value}\n        placeholder=\"Password\"\n        type=\"password\"\n        required\n        invalid={props.invalid}\n        disabled={props.disabled}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        onBlur={props.onBlur}\n        style={Object.assign({}, props.style, styles.block)}\n        helpText={{\n          children: props.invalid ? (\n            <span>{\"A password is required!\"}</span>\n          ) : (\n            \"\"\n          ),\n          validationMsg: true\n        }}\n        icon={<Icon icon={props.focused ? \"lock_open\" : \"lock\"} theme={props.focused ? 'primary': '' as any} />}\n      />\n    </div>\n  </>\n);\n\nexport default PasswordInput;\n","import * as React from \"react\";\nimport { State, EventObject } from \"xstate\";\n\nimport {\n  Context as InputControlContext,\n  Event as InputControlEvent\n} from \"../../../modules/machines/input-control\";\n\nimport Password from \"../../../modules/components/input-controls/Password\";\n\nimport { api } from '../../../modules/machines/password'\n\nimport FromInputControlMachine, {\n  ProvidedInputProps\n} from \"../../../modules/components/input-controls/FromMachine\";\n\n\nconst passwordRenderProp = <T, E extends EventObject>(current: State<T, E>) => (\n  props: ProvidedInputProps\n) => (\n  <Password\n    {...props}\n    focused={current.matches('password.focused.focused')}\n    disabled={current.matches(\"status.submitting\")}\n    invalid={\n      current.matches(\"password.touched.touched\") &&\n      current.matches(\"password.valid.invalid\")\n    }\n  />\n);\n\nexport type PropsPasswordInput<\n  TContext extends InputControlContext<string, \"password\">,\n  TEvent extends EventObject,\n  TState extends State<TContext, any, any, any>\n> = {\n  send: (evt: InputControlEvent<string>) => void;\n  context: TContext;\n  current: TState;\n};\n\nconst PasswordInput = <\n  TContext extends InputControlContext<string, \"password\">,\n  TEvent extends EventObject,\n  TState extends State<TContext, any, any, any>\n>(\n  props: PropsPasswordInput<TContext, TEvent, TState>\n) => (\n  <FromInputControlMachine\n    send={props.send}\n    context={props.current.context}\n    api={api}\n  >\n    {passwordRenderProp(props.current)}\n  </FromInputControlMachine>\n);\n\nexport default PasswordInput","import React from \"react\";\n\nimport Content from \"../../../modules/components/Content/Content\";\nimport CLoginForm from \"../../../modules/components/LoginForm\";\n\nimport LoginButton from \"./LoginButton\";\nimport UsernameInput from \"./UsernameInput\";\nimport PasswordInput from \"./PasswordInput\";\n\nexport interface PropsLoginForm {\n  send: any;\n  current: any;\n  onLogin: () => void;\n  resetButton: React.ReactNode;\n  isInProgress: boolean;\n  isNotInProgress: boolean;\n  usernameIsInvalid: boolean;\n  passwordIsInvalid: boolean;\n  isSubmitting: boolean;\n  canNotSubmit: boolean;\n}\n\nconst LoginForm = (props: PropsLoginForm) => {\n  return (\n      <CLoginForm\n        usernameInput={\n          <UsernameInput\n            send={props.send}\n            current={props.current}\n            context={props.current.context}\n          />\n        }\n        passwordInput={\n          <PasswordInput\n            send={props.send}\n            current={props.current}\n            context={props.current.context}\n          />\n        }\n        loginButton={\n          <LoginButton\n            disabled={props.canNotSubmit}\n            onClick={props.onLogin}\n          />\n        }\n        resetButton={props.resetButton}\n      />\n  );\n};\n\nexport default LoginForm;\n","import { User } from \"../../users/types\";\n\nimport q from '../q'\n\nexport const URL = \"https://jsonplaceholder.typicode.com/users/1\";\n\nexport type Params = { username: string; password: string };\n\nexport const fetchLogin = (_params: Params) =>\n  fetch(\"https://jsonplaceholder.typicode.com/users/1\");\n\nexport const fetchUser = async (params: Params) =>  q(User)(() => fetchLogin(params))","// Libs\nimport React from \"react\";\nimport { useMachine } from \"@xstate/react\";\nimport * as O from \"fp-ts/lib/Option\";\nimport * as E from \"fp-ts/lib/Either\";\nimport { pipe } from \"fp-ts/lib/pipeable\";\nimport { constant } from \"fp-ts/lib/function\";\n\n// Components\nimport Content from \"../../../modules/components/Content/Content\";\nimport WelcomeMessage from \"../../../modules/components/WelcomeMessage\";\nimport ResetButton from \"./ResetButton\";\nimport FailureMessage from \"./FailureMessage\";\nimport LoginForm from \"./LoginForm\";\n\n// Modules\nimport { fetchUser } from \"../../../modules/apis/login-api\";\nimport { useServiceLogger } from \"../../../modules/xstate\";\nimport { foldString } from \"../../../modules/fp\";\nimport { machine as loginMachine, api } from \"../../../modules/machines/login\";\n\n// Text\nimport text from \"./text.json\";\n\n// Exports\nconst LoginApp = () => {\n  const [current, send, service] = useMachine(loginMachine);\n\n  useServiceLogger(service, \"login\");\n\n  const isInProgress = current.matches(\"status.inProgress\");\n  const isNotInProgress = !isInProgress;\n  const usernameIsInvalid = current.matches(\"password.valid.invalid\");\n  const passwordIsInvalid = current.matches(\"password.valid.invalid\");\n  const isSubmitting = current.matches(\"status.submitting\");\n\n  const canNotSubmit =\n    isNotInProgress || usernameIsInvalid || passwordIsInvalid;\n\n  const loggedIn = pipe(\n    api.status.selector(current.context),\n    O.fold(constant(false), either =>\n      pipe(either, E.fold(constant(false), constant(true)))\n    )\n  );\n\n  const resetText = isInProgress\n    ? text[\"Reset\"]\n    : isSubmitting\n    ? text[\"Cancel\"]\n    : loggedIn\n    ? text[\"Logout\"]\n    : text[\"Try again\"];\n\n  const resetButton = <ResetButton send={send}>{resetText}</ResetButton>;\n\n  const form = (\n    <LoginForm\n      send={send}\n      current={current}\n      isInProgress={isInProgress}\n      isNotInProgress={isNotInProgress}\n      usernameIsInvalid={usernameIsInvalid}\n      passwordIsInvalid={passwordIsInvalid}\n      isSubmitting={isSubmitting}\n      canNotSubmit={canNotSubmit}\n      onLogin={() => {\n        send(\n          api.status.eventCreators.submit(() =>\n            fetchUser({\n              username: foldString(current.context.username),\n              password: foldString(current.context.password)\n            })\n          )\n        );\n      }}\n      resetButton={resetButton}\n    />\n  );\n\n  const content = pipe(\n    api.status.selector(current.context),\n    O.fold(constant(form), either =>\n      pipe(\n        either,\n        E.fold(\n          failure => (\n            <>\n              <FailureMessage failure={failure} />\n              {resetButton}\n            </>\n          ),\n\n          user => {\n            return (\n              <>\n                <WelcomeMessage user={user} />\n                {resetButton}\n              </>\n            );\n          }\n        )\n      )\n    )\n  );\n\n  return <Content loading={isSubmitting}>{content}</Content>;\n};\n\nexport default LoginApp;\n","import * as React from 'react'\nimport history from 'history/browser'\n\nexport const useLocation = (path: string) => {\n  React.useEffect(() => {\n    history.push(path);\n\n    return () => {};\n  }, [path]);\n}","\nimport { createMachine, assign, interpret } from 'xstate'\n\nexport type Context = Partial<{ userId: number | undefined }>\n\nexport type Event = { type: 'GOTO', route: string  } & Context\n\nexport const configuration = {\n  id: \"routes\",\n  initial: \"home\",\n  context: {},\n  on: {\n    GOTO: [\n      { target: \"home\", cond: \"home\" },\n      { target: \"users.user\", cond: \"users.user\" },\n      { target: \"users\", cond: \"users\" },\n      { target: \"notFound\" }\n    ]\n  },\n  states: {\n    home: {},\n    users: {\n      initial: \"home\",\n      states: {\n        home: {},\n        user: {\n          entry: \"setUserId\",\n          exit: \"clearUserId\"\n        }\n      }\n    },\n    notFound: {}\n  }\n};\n\nexport const guards = {\n  home: (_: Context, e: Event) => e.route === \"home\",\n  \"users.user\": (_: Context, e: Event) =>\n    e.route === \"users\" && /^\\d+$/.test(`${e.userId || ''}`),\n  users: (_: Context, e: Event) => e.route === \"users\"\n}\n\n\nexport const actions = {\n  setUserId: assign<Context, Event>({ userId: (_, e) => e.userId }),\n  clearUserId: assign<Context, Event>({ userId: (_, __) => undefined }),\n}\n\nexport const machine = createMachine<Context, Event>(\n  configuration,\n  { guards, actions }\n)\n\n\n","import { Interpreter } from 'xstate'\nimport { createContext } from 'react'\nimport { Option, none } from 'fp-ts/es6/Option'\n\nexport type Send = Option<Interpreter<any, any, any, any>['send']>\n\nconst SendContext = createContext<Send>(none);\n\nexport const { Provider, Consumer } = SendContext","import * as React from \"react\";\nimport { Context } from \"../machine\";\nimport { Consumer, Send } from \"../../SendContext\";\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as O from \"fp-ts/es6/Option\";\nimport { constant, identity } from \"fp-ts/es6/function\";\n\nexport const linkWithSend = (props: PropsLink) => (send: Send) => {\n  const onClick = pipe(\n    send,\n    O.map(f => f.bind(null, { type: \"GOTO\", route: props.to, ...props.params }, undefined)),\n    O.fold(constant(undefined), identity)\n  );\n\n  return (\n    <a href=\"#\" onClick={onClick}>\n      {props.children}\n    </a>\n  );\n};\n\nexport interface PropsLink {\n  to: string;\n  params?: Context;\n  children: React.ReactNode;\n}\n\nconst Link = (props: PropsLink) => (\n  <Consumer>{linkWithSend(props)}</Consumer>\n);\n\nexport default Link\n","import * as React from \"react\";\n\nimport { pipe } from \"fp-ts/es6/pipeable\";\nimport * as O from \"fp-ts/es6/Option\";\nimport { constant, identity } from \"fp-ts/es6/function\";\n\nimport { Consumer, Send } from \"../../SendContext\";\n\nexport const redirectWithSend = (props: PropsRedirect) => (send: Send) => {\n  React.useEffect(() => {\n    const redirect = pipe(\n      send,\n      O.map(f => () => {f({ type: \"GOTO\", route: props.to })}),\n      O.fold(constant(() => {}), identity)\n    );\n\n    redirect()\n  }, [props.to]);\n\n  return null;\n};\n\nexport interface PropsRedirect {\n  to: string;\n}\n\nconst Redirect = (props: PropsRedirect) => (\n  <Consumer>{redirectWithSend(props)}</Consumer>\n);\n\nexport default Redirect\n","import * as React from \"react\";\n\nimport history from 'history/browser'\n\nimport { useMachine } from \"@xstate/react\";\nimport useServiceLogger from \"../xstate/useServiceLogger\";\n\nimport { useLocation } from './hooks'\nimport { machine, Event} from './machine'\n\nimport Link from './components/Link'\nimport Redirect from './components/Redirect'\nimport { Provider } from '../SendContext'\nimport * as O from \"fp-ts/es6/Option\";\n\n// Comonents\nconst Users = () => {\n  useLocation(\"/users\");\n\n  const [users, setUsers] = React.useState<{ id: number; username: string }[]>(\n    []\n  );\n\n  let didCancel = false;\n\n  React.useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => !didCancel && setUsers(users));\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  const list = users.map(user => (\n    <li key={user.id}>\n      <Link to={`users`} params={{ userId: user.id }}>\n        {user.username}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{list}</ul>;\n}\n\nconst UserDetail = (props: { id: number }) => {\n  useLocation(\"/users/\" + props.id);\n  const [user, setUser] = React.useState<any>(undefined);\n\n  let didCancel = false;\n\n  React.useEffect(() => {\n    try {\n      fetch(\"https://jsonplaceholder.typicode.com/users/\" + props.id)\n        .then(response => response.json())\n        .then(user => {\n          if (!didCancel) {\n            if (user.id) {\n              setUser(user);\n            } else {\n              setUser(null);\n            }\n          }\n        });\n    } catch (error) {\n      setUser(null);\n    }\n\n    return () => {\n      didCancel = true;\n    };\n  });\n\n  if (user === null) {\n    return <Redirect to={\"notFound\"} />;\n  }\n\n  if (!user) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div>\n      <h1>{user.username}</h1>\n      <label>\n        <strong>Id</strong>\n      </label>\n      <br />\n      {user.id}\n      <hr />\n      <label>\n        <strong>Email</strong>\n      </label>\n      <br />\n      {user.email}\n    </div>\n  );\n}\n\n\n\nconst Home = () => {\n  useLocation(\"/\");\n\n  return (\n    <>\n      <h1>Hello CodeSandbox</h1>\n      <h2>Start editing to see some magic happen!</h2>\n      <Link to={\"users\"}>Show users</Link>\n    </>\n  );\n}\n\nconst NotFound = () => {\n  useLocation(\"404\");\n  return <div>404</div>;\n}\n\nconst Route = ({ state }: any) => {\n  if (state.matches(\"home\")) {\n    return <Home />;\n    // @ts-ignore\n  } else if (state.matches(\"users.user\")) {\n    // @ts-ignore\n    if (state.context.userId) {\n      // @ts-ignore\n      return <UserDetail id={state.context.userId} />;\n    }\n    return <Redirect to={\"users\"} />;\n    // @ts-ignore\n  } else if (state.matches(\"users\")) {\n    return <Users />;\n    // @ts-ignore\n  } else if (state.matches(\"notFound\")) {\n    return <NotFound />;\n  }\n\n  return <Redirect to={\"notFound\"} />;\n}\n\nconst routes = [\n  /users\\/(?<userId>\\d+)/,\n  /users/,\n]\n\nconst gotoEventFromUrl = (rawUrl: string): Event => {\n  const url = rawUrl.replace(/^\\/|\\/$/, '')\n\n  const { event } = routes.reduce(\n    (acc, next) => {\n      if (acc.match) {\n        return acc;\n      } else if (next instanceof RegExp) {\n        if (next.test(url)) {\n          const outcome = next.exec(url)\n\n          if (outcome) {\n            const groups = outcome.groups || {}\n            \n            const route = Object.keys(groups).reduce(\n              (acc2, key) => {\n                const value = groups[key]\n                return acc2.replace(`/${value}`, '')\n              },\n              outcome.input\n            ).replace(/\\//g, '.').replace(/^\\.|\\.$/, '')\n\n            return { match: true, event: { type: 'GOTO', route, ...groups }}\n          }\n        }\n      }\n\n      return acc;\n    },\n    ({ match: false, event: { type: 'GOTO', route: 'home' }})\n  )\n\n  return event as Event\n}\n\nexport default () => {\n  const [routerState, send, service] = useMachine(machine);\n  const [ready, setReady] = React.useState(false)\n\n  useServiceLogger(service, 'router')\n  \n  const context = O.some(send)\n\n  React.useEffect(\n    () => {\n      const event = gotoEventFromUrl(history.location.pathname)\n      send(event)\n      setReady(true)\n    },\n    []\n  )\n\n  if(!ready) {\n    return null\n  }\n\n  return (\n    <Provider value={context}>\n    <div style={{background: 'White', padding: 20, margin: 20}}>\n      <Route state={routerState} />\n      <hr />\n      <Link to={\"home\"}>Home</Link>\n      <hr />  \n      <Link to={\"free-money\"}>Free Money</Link>\n      <hr />\n      <Link to={\"users\"} params={{ userId: Infinity }}>\n        User with <i>Infinite</i> id\n      </Link>\n    </div>\n    </Provider>\n  );\n}\n","import \"./App.scss\";\n\nimport React, { Suspense } from \"react\";\n\nimport LoginApp from \"./apps/login\";\nimport { useTranslation } from \"react-i18next\";\n\nimport Router from './modules/router'\n\nconst NL = () => {\n  const [, i18n] = useTranslation();\n\n  React.useEffect(() => {\n    i18n.changeLanguage(\"nl\");\n    setTimeout(() => {\n      i18n.changeLanguage(\"en\");\n    }, 2500);\n  }, [i18n]);\n\n  return null;\n};\n\nconst App: React.FC = () => {\n  return (\n    <Suspense fallback=\"...\">\n      {/* <React.StrictMode> */}\n        <LoginApp />\n        <NL />\n      {/* </React.StrictMode> */}\n        <Router />\n    </Suspense>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// not like to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'en',\n    debug: true,\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n    },\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1kQCU\"};"],"sourceRoot":""}